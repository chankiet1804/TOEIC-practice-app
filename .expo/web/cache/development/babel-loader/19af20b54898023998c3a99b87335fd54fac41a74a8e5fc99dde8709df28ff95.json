{"ast":null,"code":"import * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { HomeScreen } from \"./src/screens\";\nimport { SpeakingScreen } from \"./src/screens/Speaking\";\nimport { WritingScreen } from \"./src/screens/Writing\";\nimport { VocabularyScreen } from \"./src/screens/Vocabulary\";\nimport { NoteScreen } from \"./src/screens/Note\";\nimport { SettingsScreen } from \"./src/screens/Settings\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { InforTestScreen } from \"./src/screens/Speaking/SpeakingSubscreen/InforTestScreen\";\nimport { TestScreen } from \"./src/screens/Speaking/SpeakingSubscreen/TestScreen\";\nimport { DatabaseProvider } from \"./src/database/DatabaseContext\";\nimport { DatabaseStateHandler } from \"./src/database/DatabaseStateHandler\";\nimport { MyLibraryScreen } from \"./src/screens/Vocabulary/VocabularySubscreen/MyLibraryScreen/MyLibraryScreen\";\nimport { TopicsScreen } from \"./src/screens/Vocabulary/TopicsScreen/TopicsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction MainStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: true,\n      animation: \"slide_from_right\",\n      headerTintColor: '#fff'\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Speaking\",\n      component: SpeakingScreen,\n      options: {\n        headerTitle: \"Các phần trong Speaking\",\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#5799DB'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Writing\",\n      component: WritingScreen\n    }), _jsx(Stack.Screen, {\n      name: \"VocabularyScreen\",\n      component: VocabularyScreen,\n      options: {\n        headerTitle: 'Thư viện của tôi',\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: \"#4A90E2\"\n        },\n        headerTitleStyle: {\n          color: \"#fff\",\n          fontSize: 18,\n          fontWeight: \"bold\"\n        },\n        headerTintColor: '#fff'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"InforTestScreen\",\n      component: InforTestScreen,\n      options: {\n        headerTitle: \"Thông tin bài thi\",\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#5799DB'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"TestScreen\",\n      component: TestScreen,\n      options: {\n        headerTitle: \"Danh sách các bài thi\",\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#5799DB'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"MyLibraryScreen\",\n      component: MyLibraryScreen,\n      options: function options(_ref) {\n        var navigation = _ref.navigation,\n          route = _ref.route;\n        return {\n          headerTitle: \"Thêm chủ đề mới\",\n          headerTitleAlign: 'center',\n          headerStyle: {\n            backgroundColor: \"#4A90E2\"\n          },\n          headerTitleStyle: {\n            color: \"#fff\",\n            fontSize: 18,\n            fontWeight: \"bold\"\n          },\n          headerTintColor: '#fff'\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"TopicsScreen\",\n      component: TopicsScreen,\n      options: {\n        headerTitle: \"Từ Vựng\",\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: \"#4A90E2\"\n        },\n        headerTitleStyle: {\n          color: \"#fff\",\n          fontSize: 18,\n          fontWeight: \"bold\"\n        },\n        headerTintColor: '#fff'\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(DatabaseProvider, {\n    children: _jsx(DatabaseStateHandler, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          screenOptions: function screenOptions(_ref2) {\n            var route = _ref2.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref3) {\n                var focused = _ref3.focused,\n                  color = _ref3.color,\n                  size = _ref3.size;\n                var iconSource;\n                if (route.name === \"Main\") {\n                  iconSource = require(\"./assets/main-icon.png\");\n                } else if (route.name === \"Note\") {\n                  iconSource = require(\"./assets/note-icon.png\");\n                } else if (route.name === \"Settings\") {\n                  iconSource = require(\"./assets/settings-icon.png\");\n                }\n                return _jsx(Image, {\n                  source: iconSource,\n                  style: {\n                    width: size,\n                    height: size,\n                    tintColor: color\n                  }\n                });\n              },\n              tabBarActiveTintColor: \"#60A5FA\",\n              tabBarInactiveTintColor: \"gray\"\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Main\",\n            component: MainStack,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Note\",\n            component: NoteScreen,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Settings\",\n            component: SettingsScreen,\n            options: {\n              headerShown: false\n            }\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","HomeScreen","SpeakingScreen","WritingScreen","VocabularyScreen","NoteScreen","SettingsScreen","Image","InforTestScreen","TestScreen","DatabaseProvider","DatabaseStateHandler","MyLibraryScreen","TopicsScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","MainStack","Navigator","screenOptions","headerShown","animation","headerTintColor","children","Screen","name","component","options","headerTitle","headerTitleAlign","headerStyle","backgroundColor","headerTitleStyle","fontWeight","color","fontSize","_ref","navigation","route","App","_ref2","tabBarIcon","_ref3","focused","size","iconSource","require","source","style","width","height","tintColor","tabBarActiveTintColor","tabBarInactiveTintColor"],"sources":["D:/Loc2023-2024/Mobile App/TOEIC-practice-app/App.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { HomeStackParamList } from \"./src/screens/types\";\r\nimport { HomeScreen} from \"./src/screens\";\r\nimport { SpeakingScreen } from \"./src/screens/Speaking\";\r\nimport { WritingScreen } from \"./src/screens/Writing\";\r\nimport { VocabularyScreen } from \"./src/screens/Vocabulary\";\r\nimport { NoteScreen } from \"./src/screens/Note\";\r\nimport { SettingsScreen } from \"./src/screens/Settings\";\r\nimport { Image, TouchableOpacity, ActivityIndicator, Text } from \"react-native\";\r\nimport { InforTestScreen } from \"./src/screens/Speaking/SpeakingSubscreen/InforTestScreen\";\r\nimport { TestScreen } from \"./src/screens/Speaking/SpeakingSubscreen/TestScreen\";\r\nimport { DatabaseProvider } from \"./src/database/DatabaseContext\";\r\nimport { DatabaseStateHandler } from \"./src/database/DatabaseStateHandler\";\r\nimport { MyLibraryScreen } from './src/screens/Vocabulary/VocabularySubscreen/MyLibraryScreen/MyLibraryScreen';\r\nimport { TopicsScreen } from \"./src/screens/Vocabulary/TopicsScreen/TopicsScreen\";\r\n\r\nconst Stack = createNativeStackNavigator<HomeStackParamList>();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MainStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: true,\r\n        animation: \"slide_from_right\",\r\n        headerTintColor: '#fff',\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          headerShown: false,\r\n        }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Speaking\" \r\n        component={SpeakingScreen}\r\n        options={{\r\n          headerTitle: \"Các phần trong Speaking\",\r\n          headerTitleAlign: 'center',\r\n          headerStyle: {\r\n            backgroundColor: '#5799DB',\r\n          },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}\r\n      />\r\n      <Stack.Screen name=\"Writing\" component={WritingScreen} />\r\n      <Stack.Screen \r\n        name=\"VocabularyScreen\" \r\n        component={VocabularyScreen}\r\n        options={{ \r\n          headerTitle: 'Thư viện của tôi',\r\n          headerTitleAlign: 'center',\r\n          headerStyle: {\r\n            backgroundColor: \"#4A90E2\"\r\n          },\r\n          headerTitleStyle: {\r\n            color: \"#fff\",\r\n            fontSize: 18,\r\n            fontWeight: \"bold\"\r\n          },\r\n          headerTintColor: '#fff'\r\n        }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"InforTestScreen\" \r\n        component={InforTestScreen}\r\n        options={{\r\n          headerTitle: \"Thông tin bài thi\",\r\n          headerTitleAlign: 'center',\r\n          headerStyle: {\r\n            backgroundColor: '#5799DB',\r\n          },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}\r\n      />\r\n      <Stack.Screen name=\"TestScreen\" component={TestScreen}\r\n        options={{\r\n          headerTitle: \"Danh sách các bài thi\",\r\n          headerTitleAlign: 'center',\r\n          headerStyle: {\r\n            backgroundColor: '#5799DB',\r\n          },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}\r\n      />\r\n      <Stack.Screen \r\n      name=\"MyLibraryScreen\" \r\n      component={MyLibraryScreen}\r\n      options={({ navigation, route }) => ({\r\n        headerTitle: \"Thêm chủ đề mới\",\r\n        headerTitleAlign: 'center',\r\n        headerStyle: {\r\n          backgroundColor: \"#4A90E2\"\r\n        },\r\n        headerTitleStyle: {\r\n          color: \"#fff\",\r\n          fontSize: 18,\r\n          fontWeight: \"bold\"\r\n        },\r\n        headerTintColor: '#fff',\r\n        \r\n      })}\r\n    />\r\n      <Stack.Screen \r\n        name=\"TopicsScreen\" \r\n        component={TopicsScreen} \r\n        options={{\r\n          headerTitle: \"Từ Vựng\",\r\n          headerTitleAlign: 'center',\r\n          headerStyle: {\r\n            backgroundColor: \"#4A90E2\"\r\n          },\r\n          headerTitleStyle: {\r\n            color: \"#fff\",\r\n            fontSize: 18,\r\n            fontWeight: \"bold\"\r\n          },\r\n          headerTintColor: '#fff'\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <DatabaseProvider>\r\n      <DatabaseStateHandler>\r\n        <NavigationContainer>\r\n          <Tab.Navigator\r\n          screenOptions={({ route }) => ({\r\n            tabBarIcon: ({ focused, color, size }) => {\r\n              let iconSource;\r\n              if (route.name === \"Main\") {\r\n                iconSource = require(\"./assets/main-icon.png\");\r\n              } else if (route.name === \"Note\") {\r\n                iconSource = require(\"./assets/note-icon.png\");\r\n              } else if (route.name === \"Settings\") {\r\n                iconSource = require(\"./assets/settings-icon.png\");\r\n              }\r\n              return (\r\n                <Image\r\n                  source={iconSource}\r\n                  style={{\r\n                    width: size,\r\n                    height: size,\r\n                    tintColor: color,\r\n                  }}\r\n                />\r\n              );\r\n            },\r\n            tabBarActiveTintColor: \"#60A5FA\",\r\n            tabBarInactiveTintColor: \"gray\",\r\n          })}\r\n        >\r\n          <Tab.Screen\r\n            name=\"Main\"\r\n            component={MainStack}\r\n            options={{ headerShown: false }}\r\n          />\r\n          <Tab.Screen\r\n            name=\"Note\"\r\n            component={NoteScreen}\r\n            options={{ headerShown: false }}\r\n          />\r\n          <Tab.Screen\r\n            name=\"Settings\"\r\n            component={SettingsScreen}\r\n            options={{ headerShown: false }}\r\n          />\r\n          </Tab.Navigator>\r\n        </NavigationContainer>\r\n      </DatabaseStateHandler>\r\n    </DatabaseProvider>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
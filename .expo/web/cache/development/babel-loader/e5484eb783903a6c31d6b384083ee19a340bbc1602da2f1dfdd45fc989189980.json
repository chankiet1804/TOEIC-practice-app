{"ast":null,"code":"import { ErrorScreen, LoadingScreen } from \"../screens/LoadingscreenAndErrorscreen\";\nimport { useDatabase } from \"./DatabaseContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function DatabaseStateHandler(_ref) {\n  var children = _ref.children;\n  var _useDatabase = useDatabase(),\n    isLoading = _useDatabase.isLoading,\n    error = _useDatabase.error;\n  if (isLoading) {\n    return _jsx(LoadingScreen, {});\n  }\n  if (error) {\n    return _jsx(ErrorScreen, {\n      error: error\n    });\n  }\n  return _jsx(_Fragment, {\n    children: children\n  });\n}","map":{"version":3,"names":["ErrorScreen","LoadingScreen","useDatabase","jsx","_jsx","Fragment","_Fragment","DatabaseStateHandler","_ref","children","_useDatabase","isLoading","error"],"sources":["D:/Loc2023-2024/Mobile App/TOEIC-practice-app/src/database/DatabaseStateHandler.tsx"],"sourcesContent":["import { ErrorScreen, LoadingScreen } from '../screens/LoadingscreenAndErrorscreen';\r\nimport { useDatabase } from './DatabaseContext';\r\n\r\n\r\nexport function DatabaseStateHandler({ children }: { children: React.ReactNode }) {\r\n  const { isLoading, error } = useDatabase();\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorScreen error={error} />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa;AACnC,SAASC,WAAW;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGhD,OAAO,SAASC,oBAAoBA,CAAAC,IAAA,EAA8C;EAAA,IAA3CC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC7C,IAAAC,YAAA,GAA6BR,WAAW,CAAC,CAAC;IAAlCS,SAAS,GAAAD,YAAA,CAATC,SAAS;IAAEC,KAAK,GAAAF,YAAA,CAALE,KAAK;EAExB,IAAID,SAAS,EAAE;IACb,OAAOP,IAAA,CAACH,aAAa,IAAE,CAAC;EAC1B;EAEA,IAAIW,KAAK,EAAE;IACT,OAAOR,IAAA,CAACJ,WAAW;MAACY,KAAK,EAAEA;IAAM,CAAE,CAAC;EACtC;EAEA,OAAOR,IAAA,CAAAE,SAAA;IAAAG,QAAA,EAAGA;EAAQ,CAAG,CAAC;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
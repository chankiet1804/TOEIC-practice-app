{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useRef, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { SafeAreaBox } from \"../../../../components\";\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport { insertTopics, getDBConnection } from \"../../../../database/db-service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar itemWidth = 300;\nexport function MyLibraryScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var _useState5 = useState([{\n      id: 1,\n      term: '',\n      definition: ''\n    }, {\n      id: 2,\n      term: '',\n      definition: ''\n    }]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    vocabularyList = _useState6[0],\n    setVocabularyList = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    swipeX = _useState8[0],\n    setSwipeX = _useState8[1];\n  var scrollViewRef = useRef(null);\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    db = _useState10[0],\n    setDb = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isSaving = _useState12[0],\n    setIsSaving = _useState12[1];\n  useEffect(function () {\n    var initializeDB = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var database = yield getDBConnection();\n          setDb(database);\n        } catch (error) {\n          console.error('Error initializing database:', error);\n          Alert.alert('Lỗi', 'Không thể kết nối với cơ sở dữ liệu');\n        }\n      });\n      return function initializeDB() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    initializeDB();\n  }, []);\n  var handleSaveTopic = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (isSaving) return;\n      if (!title.trim()) {\n        Alert.alert('Lỗi', 'Vui lòng nhập tiêu đề chủ đề');\n        return;\n      }\n      var hasEmptyFields = vocabularyList.some(function (item) {\n        return !item.term.trim() || !item.definition.trim();\n      });\n      if (hasEmptyFields) {\n        Alert.alert('Lỗi', 'Vui lòng điền đầy đủ thuật ngữ và định nghĩa');\n        return;\n      }\n      if (!db) {\n        Alert.alert('Lỗi', 'Không thể kết nối với cơ sở dữ liệu');\n        return;\n      }\n      setIsSaving(true);\n      try {\n        var _route$params;\n        var vocabData = {\n          topic: title,\n          description: description,\n          vocabulary: vocabularyList.map(function (item) {\n            return {\n              id: item.id.toString(),\n              term: item.term,\n              definition: item.definition\n            };\n          })\n        };\n        yield insertTopics(db, vocabData);\n        var newTopic = {\n          TopicID: title.toLowerCase().replace(/\\s+/g, '-'),\n          TopicName: title,\n          wordCount: vocabularyList.length\n        };\n        if ((_route$params = route.params) != null && _route$params.onTopicAdded) {\n          route.params.onTopicAdded(newTopic);\n        }\n        Alert.alert('Thành công', 'Đã lưu chủ đề thành công', [{\n          text: 'OK',\n          onPress: function onPress() {\n            navigation.goBack();\n          }\n        }]);\n      } catch (error) {\n        console.error('Error saving topic:', error);\n        Alert.alert('Lỗi', 'Không thể lưu chủ đề. Vui lòng thử lại.');\n      } finally {\n        setIsSaving(false);\n      }\n    });\n    return function handleSaveTopic() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (navigation) {\n      navigation.setParams({\n        handleSaveTopic: handleSaveTopic,\n        isSaving: isSaving\n      });\n    }\n  }, [handleSaveTopic, isSaving]);\n  var addVocabularyItem = function addVocabularyItem() {\n    var _scrollViewRef$curren;\n    var newItem = {\n      id: vocabularyList.length + 1,\n      term: '',\n      definition: ''\n    };\n    setVocabularyList([].concat(_toConsumableArray(vocabularyList), [newItem]));\n    setSwipeX(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, newItem.id, 0));\n    });\n    (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollToEnd({\n      animated: true\n    });\n  };\n  var deleteVocabularyItem = function deleteVocabularyItem(id) {\n    setVocabularyList(function (prevList) {\n      var newList = prevList.filter(function (item) {\n        return item.id !== id;\n      });\n      return newList;\n    });\n    setSwipeX(function (prevSwipeX) {\n      var newSwipeX = _objectSpread({}, prevSwipeX);\n      delete newSwipeX[id];\n      return newSwipeX;\n    });\n  };\n  var _onGestureEvent = function onGestureEvent(event, id) {\n    if (event.nativeEvent.state === State.ACTIVE) {\n      var translationX = event.nativeEvent.translationX;\n      if (translationX < 0 && Math.abs(translationX) <= itemWidth) {\n        setSwipeX(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, id, translationX));\n        });\n      }\n    } else if (event.nativeEvent.state === State.END) {\n      var _translationX = event.nativeEvent.translationX;\n      if (_translationX < -itemWidth * (1 / 3)) {\n        deleteVocabularyItem(id);\n      } else {\n        setSwipeX(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, id, 0));\n        });\n      }\n    }\n  };\n  return _jsx(SafeAreaBox, {\n    children: _jsxs(ScrollView, {\n      ref: scrollViewRef,\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        style: styles.titleInput,\n        placeholder: \"Nh\\u1EADp ti\\xEAu \\u0111\\u1EC1, v\\xED d\\u1EE5: 'Animal and plant'\",\n        value: title,\n        onChangeText: setTitle\n      }), _jsx(TextInput, {\n        style: styles.descriptionInput,\n        placeholder: \"Th\\xEAm m\\xF4 t\\u1EA3...\",\n        value: description,\n        onChangeText: setDescription,\n        multiline: true\n      }), vocabularyList.map(function (item) {\n        return _jsx(PanGestureHandler, {\n          onGestureEvent: function onGestureEvent(event) {\n            return _onGestureEvent(event, item.id);\n          },\n          children: _jsxs(View, {\n            style: styles.vocabularyItem,\n            children: [_jsxs(View, {\n              style: [styles.inputContainer, {\n                transform: [{\n                  translateX: swipeX[item.id] || 0\n                }]\n              }],\n              children: [_jsx(TextInput, {\n                style: styles.termInput,\n                placeholder: \"\",\n                value: item.term,\n                onChangeText: function onChangeText(text) {\n                  setVocabularyList(function (prevList) {\n                    return prevList.map(function (vocabItem) {\n                      return vocabItem.id === item.id ? _objectSpread(_objectSpread({}, vocabItem), {}, {\n                        term: text\n                      }) : vocabItem;\n                    });\n                  });\n                }\n              }), _jsx(Text, {\n                style: styles.helperText,\n                children: \"Thu\\u1EADt ng\\u1EEF\"\n              }), _jsx(TextInput, {\n                style: styles.definitionInput,\n                placeholder: \"\",\n                value: item.definition,\n                onChangeText: function onChangeText(text) {\n                  setVocabularyList(function (prevList) {\n                    return prevList.map(function (vocabItem) {\n                      return vocabItem.id === item.id ? _objectSpread(_objectSpread({}, vocabItem), {}, {\n                        definition: text\n                      }) : vocabItem;\n                    });\n                  });\n                }\n              }), _jsx(Text, {\n                style: styles.helperText,\n                children: \"\\u0110\\u1ECBnh ngh\\u0129a\"\n              })]\n            }), swipeX[item.id] < -itemWidth * (1 / 3) && _jsx(TouchableOpacity, {\n              style: styles.deleteButton,\n              onPress: function onPress() {\n                return deleteVocabularyItem(item.id);\n              },\n              children: _jsx(Text, {\n                style: styles.deleteButtonText,\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              })\n            })]\n          })\n        }, item.id);\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: addVocabularyItem,\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: \"+\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.saveButton, isSaving && styles.saveButtonDisabled],\n        onPress: handleSaveTopic,\n        disabled: isSaving,\n        children: isSaving ? _jsx(ActivityIndicator, {\n          color: \"#fff\"\n        }) : _jsx(Text, {\n          style: styles.saveButtonText,\n          children: \"L\\u01B0u\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f0f4ff'\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  titleInput: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16\n  },\n  descriptionInput: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    padding: 12,\n    height: 100,\n    marginBottom: 16\n  },\n  vocabularyItem: {\n    marginBottom: 16\n  },\n  inputContainer: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 8,\n    marginBottom: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    elevation: 5\n  },\n  termInput: {\n    borderBottomWidth: 2,\n    borderColor: '#000',\n    padding: 8,\n    marginBottom: 2\n  },\n  definitionInput: {\n    borderBottomWidth: 2,\n    borderColor: '#000',\n    padding: 8,\n    marginBottom: 4\n  },\n  helperText: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n    textAlign: 'left',\n    fontWeight: 'bold'\n  },\n  addButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#4A90E2',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginTop: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  addButtonText: {\n    color: 'white',\n    fontSize: 24\n  },\n  deleteButton: {\n    position: 'absolute',\n    right: 10,\n    top: 10,\n    backgroundColor: 'transparent'\n  },\n  deleteButtonText: {\n    fontSize: 24\n  },\n  saveButton: {\n    backgroundColor: \"#4A90E2\",\n    height: 50,\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    marginTop: 16,\n    width: '80%'\n  },\n  saveButtonText: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  saveButtonDisabled: {\n    opacity: 0.7\n  }\n});","map":{"version":3,"names":["React","useRef","useEffect","useState","View","Text","StyleSheet","ScrollView","TouchableOpacity","TextInput","Alert","ActivityIndicator","SafeAreaBox","useRoute","useNavigation","PanGestureHandler","State","insertTopics","getDBConnection","jsx","_jsx","jsxs","_jsxs","itemWidth","MyLibraryScreen","navigation","route","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","id","term","definition","_useState6","vocabularyList","setVocabularyList","_useState7","_useState8","swipeX","setSwipeX","scrollViewRef","_useState9","_useState10","db","setDb","_useState11","_useState12","isSaving","setIsSaving","initializeDB","_ref","_asyncToGenerator","database","error","console","alert","apply","arguments","handleSaveTopic","_ref2","trim","hasEmptyFields","some","item","_route$params","vocabData","topic","vocabulary","map","toString","newTopic","TopicID","toLowerCase","replace","TopicName","wordCount","length","params","onTopicAdded","text","onPress","goBack","setParams","addVocabularyItem","_scrollViewRef$curren","newItem","concat","_toConsumableArray","prev","_objectSpread","_defineProperty","current","scrollToEnd","animated","deleteVocabularyItem","prevList","newList","filter","prevSwipeX","newSwipeX","onGestureEvent","event","nativeEvent","state","ACTIVE","translationX","Math","abs","END","children","ref","style","styles","container","titleInput","placeholder","value","onChangeText","descriptionInput","multiline","vocabularyItem","inputContainer","transform","translateX","termInput","vocabItem","helperText","definitionInput","deleteButton","deleteButtonText","addButton","addButtonText","saveButton","saveButtonDisabled","disabled","color","saveButtonText","create","flex","padding","backgroundColor","header","fontSize","fontWeight","marginBottom","textAlign","borderWidth","borderColor","borderRadius","height","shadowColor","shadowOffset","width","shadowOpacity","elevation","borderBottomWidth","marginTop","justifyContent","alignItems","alignSelf","shadowRadius","position","right","top","opacity"],"sources":["D:/Loc2023-2024/Mobile App/TOEIC-practice-app/src/screens/Vocabulary/VocabularySubscreen/MyLibraryScreen/MyLibraryScreen.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, TextInput, Alert, ActivityIndicator } from 'react-native';\r\nimport { SafeAreaBox } from \"../../../../components\";\r\nimport { useRoute, useNavigation } from '@react-navigation/native';\r\nimport { HomeStackParamList, MyLibraryScreenProps } from '../../../types';\r\nimport { RouteProp } from '@react-navigation/native';\r\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\r\nimport { insertTopics, getDBConnection } from '../../../../database/db-service';\r\nimport * as SQLite from 'expo-sqlite';\r\n\r\ntype MyLibraryScreenRouteProp = RouteProp<HomeStackParamList, 'MyLibraryScreen'>;\r\n\r\nconst itemWidth = 300;\r\n\r\nexport function MyLibraryScreen() {\r\n  const navigation = useNavigation();\r\n  const route = useRoute<MyLibraryScreenRouteProp>();\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [vocabularyList, setVocabularyList] = useState<{ id: number; term: string; definition: string }[]>([\r\n    { id: 1, term: '', definition: '' },\r\n    { id: 2, term: '', definition: '' },\r\n  ]);\r\n  const [swipeX, setSwipeX] = useState<{ [key: number]: number }>({});\r\n  const scrollViewRef = useRef<ScrollView>(null);\r\n  const [db, setDb] = useState<SQLite.SQLiteDatabase | null>(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initializeDB = async () => {\r\n      try {\r\n        const database = await getDBConnection();\r\n        setDb(database);\r\n      } catch (error) {\r\n        console.error('Error initializing database:', error);\r\n        Alert.alert('Lỗi', 'Không thể kết nối với cơ sở dữ liệu');\r\n      }\r\n    };\r\n\r\n    initializeDB();\r\n  }, []);\r\n\r\n  const handleSaveTopic = async () => {\r\n    if (isSaving) return; // Prevent multiple clicks\r\n\r\n    // Validation\r\n    if (!title.trim()) {\r\n      Alert.alert('Lỗi', 'Vui lòng nhập tiêu đề chủ đề');\r\n      return;\r\n    }\r\n\r\n    const hasEmptyFields = vocabularyList.some(item => !item.term.trim() || !item.definition.trim());\r\n    if (hasEmptyFields) {\r\n      Alert.alert('Lỗi', 'Vui lòng điền đầy đủ thuật ngữ và định nghĩa');\r\n      return;\r\n    }\r\n\r\n    if (!db) {\r\n      Alert.alert('Lỗi', 'Không thể kết nối với cơ sở dữ liệu');\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n\r\n    try {\r\n      // Chuẩn bị dữ liệu để lưu\r\n      const vocabData = {\r\n        topic: title,\r\n        description: description,\r\n        vocabulary: vocabularyList.map(item => ({\r\n          id: item.id.toString(),\r\n          term: item.term,\r\n          definition: item.definition,\r\n        })),\r\n      };\r\n\r\n      // Lưu vào database\r\n      await insertTopics(db, vocabData);\r\n\r\n      // Tạo topic mới để cập nhật VocabularyScreen\r\n      const newTopic = {\r\n        TopicID: title.toLowerCase().replace(/\\s+/g, '-'),\r\n        TopicName: title,\r\n        wordCount: vocabularyList.length,\r\n      };\r\n\r\n      // Gọi callback để cập nhật danh sách topic trong VocabularyScreen\r\n      if (route.params?.onTopicAdded) {\r\n        route.params.onTopicAdded(newTopic);\r\n      }\r\n\r\n      Alert.alert(\r\n        'Thành công',\r\n        'Đã lưu chủ đề thành công',\r\n        [\r\n          {\r\n            text: 'OK',\r\n            onPress: () => {\r\n              navigation.goBack();\r\n            }\r\n          }\r\n        ]\r\n      );\r\n    } catch (error) {\r\n      console.error('Error saving topic:', error);\r\n      Alert.alert('Lỗi', 'Không thể lưu chủ đề. Vui lòng thử lại.');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (navigation) {\r\n      navigation.setParams({\r\n        handleSaveTopic: handleSaveTopic,\r\n        isSaving: isSaving\r\n      });\r\n    }\r\n  }, [handleSaveTopic, isSaving]);\r\n\r\n  const addVocabularyItem = () => {\r\n    const newItem = { id: vocabularyList.length + 1, term: '', definition: '' };\r\n    setVocabularyList([...vocabularyList, newItem]);\r\n    setSwipeX(prev => ({ ...prev, [newItem.id]: 0 }));\r\n    scrollViewRef.current?.scrollToEnd({ animated: true });\r\n  };\r\n\r\n  const deleteVocabularyItem = (id: number) => {\r\n    setVocabularyList(prevList => {\r\n      const newList = prevList.filter(item => item.id !== id);\r\n      return newList;\r\n    });\r\n    setSwipeX(prevSwipeX => {\r\n      const newSwipeX = { ...prevSwipeX };\r\n      delete newSwipeX[id]; // Xóa trạng thái swipeX của khung đã xóa\r\n      return newSwipeX;\r\n    });\r\n  };\r\n\r\n  const onGestureEvent = (event: any, id: number) => {\r\n    if (event.nativeEvent.state === State.ACTIVE) {\r\n      const translationX = event.nativeEvent.translationX;\r\n      if (translationX < 0 && Math.abs(translationX) <= itemWidth) {\r\n        setSwipeX(prev => ({ ...prev, [id]: translationX }));\r\n      }\r\n    } else if (event.nativeEvent.state === State.END) {\r\n      const translationX = event.nativeEvent.translationX;\r\n      if (translationX < -itemWidth * (1 / 3)) {\r\n        deleteVocabularyItem(id);\r\n      } else {\r\n        setSwipeX(prev => ({ ...prev, [id]: 0 })); // Đặt lại trạng thái cho khung hiện tại\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaBox>\r\n      <ScrollView ref={scrollViewRef} style={styles.container}>\r\n        <TextInput\r\n          style={styles.titleInput}\r\n          placeholder=\"Nhập tiêu đề, ví dụ: 'Animal and plant'\"\r\n          value={title}\r\n          onChangeText={setTitle}\r\n        />\r\n        \r\n        <TextInput\r\n          style={styles.descriptionInput}\r\n          placeholder=\"Thêm mô tả...\"\r\n          value={description}\r\n          onChangeText={setDescription}\r\n          multiline\r\n        />\r\n\r\n        {vocabularyList.map((item) => (\r\n          <PanGestureHandler onGestureEvent={(event) => onGestureEvent(event, item.id)} key={item.id}>\r\n            <View style={styles.vocabularyItem}>\r\n              <View style={[styles.inputContainer, { transform: [{ translateX: swipeX[item.id] || 0 }] }]}>\r\n                <TextInput\r\n                  style={styles.termInput}\r\n                  placeholder=\"\"\r\n                  value={item.term}\r\n                  onChangeText={(text) => {\r\n                    setVocabularyList(prevList => \r\n                      prevList.map(vocabItem => \r\n                        vocabItem.id === item.id ? { ...vocabItem, term: text } : vocabItem\r\n                      )\r\n                    );\r\n                  }}\r\n                />\r\n                <Text style={styles.helperText}>Thuật ngữ</Text>\r\n                <TextInput\r\n                  style={styles.definitionInput}\r\n                  placeholder=\"\"\r\n                  value={item.definition}\r\n                  onChangeText={(text) => {\r\n                    setVocabularyList(prevList => \r\n                      prevList.map(vocabItem => \r\n                        vocabItem.id === item.id ? { ...vocabItem, definition: text } : vocabItem\r\n                      )\r\n                    );\r\n                  }}\r\n                />\r\n                <Text style={styles.helperText}>Định nghĩa</Text>\r\n              </View>\r\n              {swipeX[item.id] < -itemWidth * (1 / 3) && (\r\n                <TouchableOpacity style={styles.deleteButton} onPress={() => deleteVocabularyItem(item.id)}>\r\n                  <Text style={styles.deleteButtonText}>🗑️</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n          </PanGestureHandler>\r\n        ))}\r\n\r\n        <TouchableOpacity style={styles.addButton} onPress={addVocabularyItem}>\r\n          <Text style={styles.addButtonText}>+</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity \r\n          style={[styles.saveButton, isSaving && styles.saveButtonDisabled]} \r\n          onPress={handleSaveTopic}\r\n          disabled={isSaving}\r\n        >\r\n          {isSaving ? (\r\n            <ActivityIndicator color=\"#fff\" />\r\n          ) : (\r\n            <Text style={styles.saveButtonText}>Lưu</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n      {/* <TouchableOpacity \r\n          style={[styles.saveButton, isSaving && { opacity: 0.7 }]} \r\n          onPress={handleSaveTopic}\r\n          disabled={isSaving}\r\n        >\r\n          {isSaving ? (\r\n            <ActivityIndicator color=\"#fff\" />\r\n          ) : (\r\n            <Text style={styles.saveButtonText}>Lưu</Text>\r\n          )}\r\n        </TouchableOpacity> */}\r\n    </SafeAreaBox>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#f0f4ff',\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n    textAlign: 'center',\r\n  },\r\n  titleInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginBottom: 16,\r\n  },\r\n  descriptionInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    height: 100,\r\n    marginBottom: 16,\r\n  },\r\n  vocabularyItem: {\r\n    marginBottom: 16,\r\n  },\r\n  inputContainer: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    padding: 8,\r\n    marginBottom: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    elevation: 5,\r\n  },\r\n  termInput: {\r\n    borderBottomWidth: 2,\r\n    borderColor: '#000',\r\n    padding: 8,\r\n    marginBottom: 2,\r\n  },\r\n  definitionInput: {\r\n    borderBottomWidth: 2,\r\n    borderColor: '#000',\r\n    padding: 8,\r\n    marginBottom: 4,\r\n  },\r\n  helperText: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginTop: 4,\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  addButton: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    backgroundColor: '#4A90E2',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    marginTop: 16,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  addButtonText: {\r\n    color: 'white',\r\n    fontSize: 24,\r\n  },\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    right: 10,\r\n    top: 10,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  deleteButtonText: {\r\n    fontSize: 24,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: \"#4A90E2\",\r\n    height: 50,\r\n    borderRadius: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    marginTop: 16,\r\n    width: '80%',\r\n  },\r\n  saveButtonText: {\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  saveButtonDisabled: {\r\n    opacity: 0.7,\r\n  }\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { getDBConnection, createTables, insertTests, insertParts } from \"./db-service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DatabaseContext = createContext(undefined);\nexport function DatabaseProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    database = _useState2[0],\n    setDatabase = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  useEffect(function () {\n    var initDatabase = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var db = yield getDBConnection();\n          yield createTables(db);\n          yield insertTests(db);\n          yield insertParts(db);\n          setDatabase(db);\n        } catch (err) {\n          setError(err);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function initDatabase() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    initDatabase();\n  }, []);\n  return _jsx(DatabaseContext.Provider, {\n    value: {\n      database: database,\n      isLoading: isLoading,\n      error: error\n    },\n    children: children\n  });\n}\nexport function useDatabase() {\n  var context = useContext(DatabaseContext);\n  if (context === undefined) {\n    throw new Error('useDatabase must be used within a DatabaseProvider');\n  }\n  return context;\n}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","getDBConnection","createTables","insertTests","insertParts","jsx","_jsx","DatabaseContext","undefined","DatabaseProvider","_ref","children","_useState","_useState2","_slicedToArray","database","setDatabase","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","initDatabase","_ref2","_asyncToGenerator","db","err","apply","arguments","Provider","value","useDatabase","context","Error"],"sources":["D:/Loc2023-2024/Mobile App/TOEIC-practice-app/src/database/DatabaseContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { getDBConnection, createTables, insertTests, insertParts } from './db-service';\r\n\r\ninterface DatabaseContextType {\r\n  database: any;\r\n  isLoading: boolean;\r\n  error: Error | null;\r\n}\r\n\r\nconst DatabaseContext = createContext<DatabaseContextType | undefined>(undefined);\r\n\r\nexport function DatabaseProvider({ children }: { children: React.ReactNode }) {\r\n  const [database, setDatabase] = useState<any>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  useEffect(() => {\r\n    const initDatabase = async () => {\r\n      try {\r\n        const db = await getDBConnection();\r\n        await createTables(db);\r\n        await insertTests(db);\r\n        await insertParts(db);\r\n        \r\n        setDatabase(db);\r\n      } catch (err) {\r\n        setError(err as Error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initDatabase();\r\n  }, []);\r\n\r\n  return (\r\n    <DatabaseContext.Provider value={{ database, isLoading, error }}>\r\n      {children}\r\n    </DatabaseContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook để sử dụng database\r\nexport function useDatabase() {\r\n  const context = useContext(DatabaseContext);\r\n  if (context === undefined) {\r\n    throw new Error('useDatabase must be used within a DatabaseProvider');\r\n  }\r\n  return context;\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,eAAe,EAAEC,YAAY,EAAEC,WAAW,EAAEC,WAAW;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAQvF,IAAMC,eAAe,GAAGV,aAAa,CAAkCW,SAAS,CAAC;AAEjF,OAAO,SAASC,gBAAgBA,CAAAC,IAAA,EAA8C;EAAA,IAA3CC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACzC,IAAAC,SAAA,GAAgCZ,QAAQ,CAAM,IAAI,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAkCjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAA0BrB,QAAQ,CAAe,IAAI,CAAC;IAAAsB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBvB,SAAS,CAAC,YAAM;IACd,IAAM0B,YAAY;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC/B,IAAI;UACF,IAAMC,EAAE,SAAS3B,eAAe,CAAC,CAAC;UAClC,MAAMC,YAAY,CAAC0B,EAAE,CAAC;UACtB,MAAMzB,WAAW,CAACyB,EAAE,CAAC;UACrB,MAAMxB,WAAW,CAACwB,EAAE,CAAC;UAErBZ,WAAW,CAACY,EAAE,CAAC;QACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZL,QAAQ,CAACK,GAAY,CAAC;QACxB,CAAC,SAAS;UACRT,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC;MAAA,gBAbKK,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAAI,KAAA,OAAAC,SAAA;MAAA;IAAA,GAajB;IAEDN,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEnB,IAAA,CAACC,eAAe,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAElB,QAAQ,EAARA,QAAQ;MAAEI,SAAS,EAATA,SAAS;MAAEI,KAAK,EAALA;IAAM,CAAE;IAAAZ,QAAA,EAC7DA;EAAQ,CACe,CAAC;AAE/B;AAGA,OAAO,SAASuB,WAAWA,CAAA,EAAG;EAC5B,IAAMC,OAAO,GAAGrC,UAAU,CAACS,eAAe,CAAC;EAC3C,IAAI4B,OAAO,KAAK3B,SAAS,EAAE;IACzB,MAAM,IAAI4B,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Heading } from \"../../../components/Heading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get('window').width;\nvar cardWidth = (windowWidth - 8 * 2 - 8) / 2;\nexport function PartCard(_ref) {\n  var title = _ref.title,\n    image = _ref.image,\n    index = _ref.index,\n    onPress = _ref.onPress;\n  return _jsxs(Pressable, {\n    onPress: onPress,\n    style: [partCard.root, {\n      marginRight: index % 2 === 0 ? 8 : 0\n    }],\n    children: [_jsx(View, {\n      style: partCard.imageContainer,\n      children: _jsx(Image, {\n        style: partCard.image,\n        source: image.source,\n        alt: image.alt,\n        resizeMode: \"cover\"\n      })\n    }), _jsx(View, {\n      style: partCard.textContainer,\n      children: _jsx(Heading, {\n        text: title,\n        fontSize: 18\n      })\n    })]\n  });\n}\nvar partCard = StyleSheet.create({\n  root: {\n    flex: 1,\n    maxWidth: cardWidth,\n    backgroundColor: 'white',\n    borderRadius: 8,\n    marginBottom: 8,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22\n  },\n  imageContainer: {\n    width: '100%',\n    height: cardWidth * 0.6,\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    overflow: 'hidden'\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  },\n  textContainer: {\n    padding: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["Heading","jsx","_jsx","jsxs","_jsxs","windowWidth","Dimensions","get","width","cardWidth","PartCard","_ref","title","image","index","onPress","Pressable","style","partCard","root","marginRight","children","View","imageContainer","Image","source","alt","resizeMode","textContainer","text","fontSize","StyleSheet","create","flex","maxWidth","backgroundColor","borderRadius","marginBottom","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","borderTopLeftRadius","borderTopRightRadius","overflow","padding","alignItems","justifyContent"],"sources":["D:/Loc2023-2024/Mobile App/TOEIC-practice-app/src/screens/Speaking/components/PartCard.tsx"],"sourcesContent":["import { Dimensions, Image, Pressable, StyleSheet, Text, View } from \"react-native\";\r\nimport { Heading } from \"../../../components/Heading\";\r\n\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst cardWidth = (windowWidth - (8 * 2) - 8) / 2;\r\n\r\nexport interface image {\r\n    source: any;\r\n    alt: string;\r\n  }\r\nexport interface Props {\r\n    title: string;\r\n    image: image;\r\n    index: number;\r\n    onPress: () => void;\r\n}\r\n\r\n\r\n  export function PartCard({\r\n    title,\r\n    image ,\r\n    index,\r\n    onPress,\r\n  }: Props) {\r\n    return (\r\n      <Pressable\r\n        onPress={onPress}\r\n        style={[partCard.root, { marginRight: index % 2 === 0 ? 8 : 0 }]}>\r\n        <View style={partCard.imageContainer}>\r\n        <Image\r\n          style={partCard.image}\r\n          source={image.source}\r\n          alt={image.alt}\r\n          resizeMode=\"cover\"\r\n        />\r\n        </View>\r\n        <View style={partCard.textContainer}>\r\n          <Heading text={title} fontSize={18} />\r\n        </View>\r\n      </Pressable>\r\n    );\r\n  }\r\n\r\n  const partCard = StyleSheet.create({\r\n    root: {\r\n      flex: 1,\r\n      maxWidth: cardWidth,\r\n      backgroundColor: 'white',\r\n      borderRadius: 8,\r\n      marginBottom: 8,\r\n      elevation: 2, // for Android shadow\r\n      shadowColor: '#000', // for iOS shadow\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 1,\r\n      },\r\n      shadowOpacity: 0.22,\r\n      shadowRadius: 2.22,\r\n    },\r\n    imageContainer: {\r\n      width: '100%',\r\n      height: cardWidth * 0.6, // Tỉ lệ khung hình 3:2\r\n      borderTopLeftRadius: 8,\r\n      borderTopRightRadius: 8,\r\n      overflow: 'hidden',\r\n    },\r\n    image: {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n    textContainer: {\r\n      padding: 8,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });\r\n  "],"mappings":";;;;;AACA,SAASA,OAAO;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtD,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AAClD,IAAMC,SAAS,GAAG,CAACJ,WAAW,GAAI,CAAC,GAAG,CAAE,GAAG,CAAC,IAAI,CAAC;AAc/C,OAAO,SAASK,QAAQA,CAAAC,IAAA,EAKd;EAAA,IAJRC,KAAK,GAAAD,IAAA,CAALC,KAAK;IACLC,KAAK,GAAAF,IAAA,CAALE,KAAK;IACLC,KAAK,GAAAH,IAAA,CAALG,KAAK;IACLC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;EAEP,OACEX,KAAA,CAACY,SAAS;IACRD,OAAO,EAAEA,OAAQ;IACjBE,KAAK,EAAE,CAACC,QAAQ,CAACC,IAAI,EAAE;MAAEC,WAAW,EAAEN,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;IAAE,CAAC,CAAE;IAAAO,QAAA,GACjEnB,IAAA,CAACoB,IAAI;MAACL,KAAK,EAAEC,QAAQ,CAACK,cAAe;MAAAF,QAAA,EACrCnB,IAAA,CAACsB,KAAK;QACJP,KAAK,EAAEC,QAAQ,CAACL,KAAM;QACtBY,MAAM,EAAEZ,KAAK,CAACY,MAAO;QACrBC,GAAG,EAAEb,KAAK,CAACa,GAAI;QACfC,UAAU,EAAC;MAAO,CACnB;IAAC,CACI,CAAC,EACPzB,IAAA,CAACoB,IAAI;MAACL,KAAK,EAAEC,QAAQ,CAACU,aAAc;MAAAP,QAAA,EAClCnB,IAAA,CAACF,OAAO;QAAC6B,IAAI,EAAEjB,KAAM;QAACkB,QAAQ,EAAE;MAAG,CAAE;IAAC,CAClC,CAAC;EAAA,CACE,CAAC;AAEhB;AAEA,IAAMZ,QAAQ,GAAGa,UAAU,CAACC,MAAM,CAAC;EACjCb,IAAI,EAAE;IACJc,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAEzB,SAAS;IACnB0B,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MACZhC,KAAK,EAAE,CAAC;MACRiC,MAAM,EAAE;IACV,CAAC;IACDC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDpB,cAAc,EAAE;IACdf,KAAK,EAAE,MAAM;IACbiC,MAAM,EAAEhC,SAAS,GAAG,GAAG;IACvBmC,mBAAmB,EAAE,CAAC;IACtBC,oBAAoB,EAAE,CAAC;IACvBC,QAAQ,EAAE;EACZ,CAAC;EACDjC,KAAK,EAAE;IACLL,KAAK,EAAE,MAAM;IACbiC,MAAM,EAAE;EACV,CAAC;EACDb,aAAa,EAAE;IACbmB,OAAO,EAAE,CAAC;IACVC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
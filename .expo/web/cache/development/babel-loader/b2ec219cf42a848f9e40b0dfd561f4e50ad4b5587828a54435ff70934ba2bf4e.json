{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaBox } from \"../../components\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function VocabularyScreen() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    topics = _useState2[0],\n    setTopics = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var handleAddPress = function handleAddPress() {\n    try {\n      console.log('Navigating to MyLibraryScreen');\n      navigation.navigate('MyLibraryScreen');\n    } catch (error) {\n      console.error('Navigation error:', error);\n    }\n  };\n  return _jsxs(SafeAreaBox, {\n    children: [_jsx(View, {\n      style: styles.searchContainer,\n      children: _jsx(TextInput, {\n        placeholder: \"Nh\\u1EADp ch\\u1EE7 \\u0111\\u1EC1 c\\u1EA7n t\\xECm ki\\u1EBFm\",\n        style: styles.searchInput,\n        placeholderTextColor: \"#666\"\n      })\n    }), _jsx(View, {\n      style: styles.rootContainer,\n      children: _jsx(FlatList, {\n        numColumns: 2,\n        data: topics,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n            index = _ref.index;\n          return _jsx(TouchableOpacity, {\n            style: styles.card,\n            onPress: function onPress() {\n              return navigation.navigate('TopicDetailScreen', {\n                topicId: item.TopicID\n              });\n            },\n            children: _jsxs(View, {\n              style: styles.cardContent,\n              children: [_jsx(Text, {\n                style: styles.title,\n                children: item.TopicName\n              }), _jsx(Text, {\n                style: styles.description,\n                children: item.Description\n              })]\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.TopicID;\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: handleAddPress,\n      children: _jsx(Text, {\n        style: styles.addButtonText,\n        children: \"+\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  rootContainer: {\n    padding: 16,\n    flex: 1,\n    gap: 8\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    marginHorizontal: 16,\n    marginTop: 20,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: \"#E8E8E8\",\n    borderRadius: 25,\n    backgroundColor: \"#F6F6F6\",\n    alignItems: \"center\",\n    paddingLeft: 16,\n    paddingRight: 8,\n    height: 40\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 14,\n    color: \"#000\",\n    padding: 0,\n    outlineStyle: 'none'\n  },\n  searchButton: {\n    padding: 8\n  },\n  searchIcon: {\n    fontSize: 16\n  },\n  card: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#e6e6fa\",\n    padding: 16,\n    marginBottom: 8,\n    borderRadius: 8,\n    shadowColor: \"#000\",\n    shadowOpacity: 0.1,\n    shadowOffset: {\n      width: 0,\n      height: 1\n    }\n  },\n  cardContent: {\n    flex: 1\n  },\n  termCount: {\n    fontSize: 14,\n    color: \"#666\"\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginTop: 4\n  },\n  cardActions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: 50\n  },\n  addButton: {\n    backgroundColor: \"#4A90E2\",\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    marginTop: 16\n  },\n  addButtonText: {\n    color: \"#fff\",\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  centerContent: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center'\n  },\n  description: {\n    fontSize: 14,\n    color: \"#666\",\n    marginTop: 4\n  }\n});","map":{"version":3,"names":["SafeAreaBox","React","useState","useNavigation","jsx","_jsx","jsxs","_jsxs","VocabularyScreen","navigation","_useState","_useState2","_slicedToArray","topics","setTopics","_useState3","_useState4","error","setError","handleAddPress","console","log","navigate","children","View","style","styles","searchContainer","TextInput","placeholder","searchInput","placeholderTextColor","rootContainer","FlatList","numColumns","data","renderItem","_ref","item","index","TouchableOpacity","card","onPress","topicId","TopicID","cardContent","Text","title","TopicName","description","Description","keyExtractor","addButton","addButtonText","StyleSheet","create","padding","flex","gap","flexDirection","marginHorizontal","marginTop","marginBottom","borderWidth","borderColor","borderRadius","backgroundColor","alignItems","paddingLeft","paddingRight","height","fontSize","color","outlineStyle","searchButton","searchIcon","justifyContent","shadowColor","shadowOpacity","shadowOffset","width","termCount","fontWeight","cardActions","alignSelf","centerContent","errorText","textAlign"],"sources":["D:/Loc2023-2024/Mobile App/TOEIC-practice-app/src/screens/Vocabulary/VocabularyScreen.tsx"],"sourcesContent":["import { View, Text, TextInput, TouchableOpacity, FlatList, StyleSheet } from \"react-native\";\r\nimport { SafeAreaBox } from \"../../components\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport { HomeStackParamList, Topic } from \"../types\";\r\n\r\nexport function VocabularyScreen() {\r\n  const navigation = useNavigation<NativeStackNavigationProp<HomeStackParamList>>();\r\n  const [topics, setTopics] = useState<Topic[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleAddPress = () => {\r\n    try {\r\n      console.log('Navigating to MyLibraryScreen');\r\n      navigation.navigate('MyLibraryScreen');\r\n    } catch (error) {\r\n      console.error('Navigation error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaBox>\r\n      {/* Thanh tìm kiếm */}\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          placeholder=\"Nhập chủ đề cần tìm kiếm\"\r\n          style={styles.searchInput}\r\n          placeholderTextColor=\"#666\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.rootContainer}>    \r\n        <FlatList\r\n          numColumns={2}\r\n          data={topics}\r\n          renderItem={({ item, index }) => (\r\n            <TouchableOpacity \r\n              style={styles.card}\r\n              onPress={() => navigation.navigate('TopicDetailScreen', { topicId: item.TopicID })}\r\n            >\r\n              <View style={styles.cardContent}>\r\n                <Text style={styles.title}>{item.TopicName}</Text>\r\n                <Text style={styles.description}>{item.Description}</Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          )}\r\n          keyExtractor={(item) => item.TopicID}\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity style={styles.addButton} onPress={handleAddPress}>\r\n        <Text style={styles.addButtonText}>+</Text>\r\n      </TouchableOpacity>\r\n    </SafeAreaBox>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    padding: 16,\r\n    flex: 1,\r\n    gap: 8,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: \"row\",\r\n    marginHorizontal: 16,\r\n    marginTop: 20,\r\n    marginBottom: 16,\r\n    borderWidth: 1,\r\n    borderColor: \"#E8E8E8\",\r\n    borderRadius: 25,\r\n    backgroundColor: \"#F6F6F6\",\r\n    alignItems: \"center\",\r\n    paddingLeft: 16,\r\n    paddingRight: 8,\r\n    height: 40,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    color: \"#000\",\r\n    padding: 0,\r\n    outlineStyle: 'none',\r\n  },\r\n  searchButton: {\r\n    padding: 8,\r\n  },\r\n  searchIcon: {\r\n    fontSize: 16,\r\n  },\r\n  card: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#e6e6fa\",\r\n    padding: 16,\r\n    marginBottom: 8,\r\n    borderRadius: 8,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.1,\r\n    shadowOffset: { width: 0, height: 1 },\r\n  },\r\n  cardContent: {\r\n    flex: 1,\r\n  },\r\n  termCount: {\r\n    fontSize: 14,\r\n    color: \"#666\",\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginTop: 4,\r\n  },\r\n  cardActions: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    width: 50,\r\n  },\r\n  addButton: {\r\n    backgroundColor: \"#4A90E2\",\r\n    height: 50,\r\n    width: 50,\r\n    borderRadius: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    marginTop: 16,\r\n  },\r\n  addButtonText: {\r\n    color: \"#fff\",\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  centerContent: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n  },\r\n  description: {\r\n    fontSize: 14,\r\n    color: \"#666\",\r\n    marginTop: 4\r\n  },\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
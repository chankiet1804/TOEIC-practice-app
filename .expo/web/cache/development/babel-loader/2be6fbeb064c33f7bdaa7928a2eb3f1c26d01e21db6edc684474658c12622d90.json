{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport { SafeAreaBox } from \"../../../components\";\nimport { useRoute } from '@react-navigation/native';\nimport Icon from \"@expo/vector-icons/Feather\";\nimport { getVocabByTopic } from \"../../../data/vocabData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function TopicsScreen() {\n  var route = useRoute();\n  var topicId = route.params.topicId;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentWordIndex = _useState2[0],\n    setCurrentWordIndex = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFlipped = _useState4[0],\n    setIsFlipped = _useState4[1];\n  var topicData = getVocabByTopic(topicId);\n  var words = (topicData == null ? void 0 : topicData.words) || [];\n  var currentWord = words[currentWordIndex];\n  var flipAnimation = useRef(new Animated.Value(0)).current;\n  var translateX = useRef(new Animated.Value(0)).current;\n  var flipCard = function flipCard() {\n    setIsFlipped(!isFlipped);\n    Animated.spring(flipAnimation, {\n      toValue: isFlipped ? 0 : 180,\n      friction: 8,\n      tension: 10,\n      useNativeDriver: true\n    }).start();\n  };\n  var frontInterpolate = flipAnimation.interpolate({\n    inputRange: [0, 180],\n    outputRange: ['0deg', '180deg']\n  });\n  var backInterpolate = flipAnimation.interpolate({\n    inputRange: [0, 180],\n    outputRange: ['180deg', '360deg']\n  });\n  var frontAnimatedStyle = {\n    transform: [{\n      rotateY: frontInterpolate\n    }]\n  };\n  var backAnimatedStyle = {\n    transform: [{\n      rotateY: backInterpolate\n    }]\n  };\n  var handleNext = function handleNext() {\n    if (currentWordIndex < words.length - 1) {\n      setIsFlipped(false);\n      flipAnimation.setValue(0);\n      setCurrentWordIndex(currentWordIndex + 1);\n    }\n  };\n  var handlePrevious = function handlePrevious() {\n    if (currentWordIndex > 0) {\n      setIsFlipped(false);\n      flipAnimation.setValue(0);\n      setCurrentWordIndex(currentWordIndex - 1);\n    }\n  };\n  var panResponder = useRef(PanResponder.create({\n    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n      return Math.abs(gestureState.dx) > 20;\n    },\n    onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n      translateX.setValue(gestureState.dx);\n    },\n    onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n      if (gestureState.dx > 50) {\n        handlePrevious();\n      } else if (gestureState.dx < -50) {\n        handleNext();\n      } else {\n        Animated.spring(translateX, {\n          toValue: 0,\n          friction: 8,\n          tension: 10,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  })).current;\n  return _jsx(SafeAreaBox, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TouchableOpacity, _objectSpread(_objectSpread({\n        onPress: flipCard,\n        activeOpacity: 1\n      }, panResponder.panHandlers), {}, {\n        children: _jsxs(Animated.View, {\n          style: [styles.cardContainer, {\n            transform: [{\n              translateX: translateX\n            }]\n          }],\n          children: [_jsx(Animated.View, {\n            style: [styles.flashcard, frontAnimatedStyle],\n            children: _jsx(Text, {\n              style: styles.wordText,\n              children: currentWord == null ? void 0 : currentWord.word\n            })\n          }), _jsx(Animated.View, {\n            style: [styles.flashcard, styles.flashcardBack, backAnimatedStyle],\n            children: _jsx(Text, {\n              style: styles.vietnameseText,\n              children: currentWord == null ? void 0 : currentWord.vietnamese\n            })\n          })]\n        })\n      })), _jsxs(View, {\n        style: styles.navigation,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.navButton,\n          onPress: handlePrevious,\n          disabled: currentWordIndex === 0,\n          children: _jsx(Icon, {\n            name: \"chevron-left\",\n            size: 24,\n            color: currentWordIndex === 0 ? \"#ccc\" : \"#000\"\n          })\n        }), _jsx(Text, {\n          style: styles.pageIndicator,\n          children: `${currentWordIndex + 1} / ${words.length}`\n        }), _jsx(TouchableOpacity, {\n          style: styles.navButton,\n          onPress: handleNext,\n          disabled: currentWordIndex === words.length - 1,\n          children: _jsx(Icon, {\n            name: \"chevron-right\",\n            size: 24,\n            color: currentWordIndex === words.length - 1 ? \"#ccc\" : \"#000\"\n          })\n        })]\n      })]\n    })\n  });\n}\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar cardWidth = width * 0.85;\nvar cardHeight = height * 0.45;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: 10\n  },\n  cardContainer: {\n    width: cardWidth,\n    height: cardHeight,\n    marginVertical: 15\n  },\n  flashcard: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 20,\n    padding: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backfaceVisibility: 'hidden',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    position: 'absolute',\n    borderWidth: 1,\n    borderColor: '#E0E0E0'\n  },\n  flashcardBack: {\n    backgroundColor: '#F8F9FA',\n    borderRadius: 20,\n    padding: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  wordText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 20,\n    color: '#2C3E50'\n  },\n  pronunciationText: {\n    fontSize: 18,\n    color: '#7F8C8D',\n    marginVertical: 10,\n    fontStyle: 'italic'\n  },\n  partOfSpeechText: {\n    fontSize: 16,\n    color: '#95A5A6',\n    marginVertical: 10,\n    textTransform: 'lowercase'\n  },\n  vietnameseText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 20,\n    color: '#2C3E50'\n  },\n  exampleText: {\n    fontSize: 16,\n    color: '#666'\n  },\n  navigation: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20\n  },\n  navButton: {\n    padding: 10\n  },\n  pageIndicator: {\n    marginHorizontal: 20,\n    fontSize: 16\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#ff0000',\n    marginTop: 20\n  }\n});","map":{"version":3,"names":["React","useState","useRef","View","Text","StyleSheet","TouchableOpacity","Animated","Dimensions","PanResponder","SafeAreaBox","useRoute","Icon","getVocabByTopic","jsx","_jsx","jsxs","_jsxs","TopicsScreen","route","topicId","params","_useState","_useState2","_slicedToArray","currentWordIndex","setCurrentWordIndex","_useState3","_useState4","isFlipped","setIsFlipped","topicData","words","currentWord","flipAnimation","Value","current","translateX","flipCard","spring","toValue","friction","tension","useNativeDriver","start","frontInterpolate","interpolate","inputRange","outputRange","backInterpolate","frontAnimatedStyle","transform","rotateY","backAnimatedStyle","handleNext","length","setValue","handlePrevious","panResponder","create","onMoveShouldSetPanResponder","evt","gestureState","Math","abs","dx","onPanResponderMove","onPanResponderRelease","children","style","styles","container","_objectSpread","onPress","activeOpacity","panHandlers","cardContainer","flashcard","wordText","word","flashcardBack","vietnameseText","vietnamese","navigation","navButton","disabled","name","size","color","pageIndicator","_Dimensions$get","get","width","height","cardWidth","cardHeight","flex","alignItems","padding","paddingTop","marginVertical","backgroundColor","borderRadius","justifyContent","backfaceVisibility","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","position","borderWidth","borderColor","fontSize","fontWeight","textAlign","pronunciationText","fontStyle","partOfSpeechText","textTransform","exampleText","flexDirection","marginTop","marginHorizontal","errorText"],"sources":["D:/Loc2023-2024/Mobile App/TOEIC-practice-app/src/screens/Vocabulary/TopicsScreen/TopicsScreen.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { \r\n  View, \r\n  Text, \r\n  StyleSheet, \r\n  TouchableOpacity, \r\n  Animated, \r\n  Dimensions,\r\n  PanResponder\r\n} from 'react-native';\r\nimport { SafeAreaBox } from \"../../../components\";\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { HomeStackParamList } from '../../../screens/types';\r\nimport { RouteProp } from '@react-navigation/native';\r\nimport Icon from 'react-native-vector-icons/Feather';\r\nimport { getVocabByTopic } from '../../../data/vocabData';\r\n\r\ntype TopicsScreenRouteProp = RouteProp<HomeStackParamList, 'TopicsScreen'>;\r\n\r\nexport function TopicsScreen() {\r\n  const route = useRoute<TopicsScreenRouteProp>();\r\n  const { topicId } = route.params;\r\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  \r\n  const topicData = getVocabByTopic(topicId);\r\n  const words = topicData?.words || [];\r\n  const currentWord = words[currentWordIndex];\r\n\r\n  // Animation\r\n  const flipAnimation = useRef(new Animated.Value(0)).current;\r\n  const translateX = useRef(new Animated.Value(0)).current;\r\n\r\n  const flipCard = () => {\r\n    setIsFlipped(!isFlipped);\r\n    Animated.spring(flipAnimation, {\r\n      toValue: isFlipped ? 0 : 180,\r\n      friction: 8,\r\n      tension: 10,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const frontInterpolate = flipAnimation.interpolate({\r\n    inputRange: [0, 180],\r\n    outputRange: ['0deg', '180deg'],\r\n  });\r\n\r\n  const backInterpolate = flipAnimation.interpolate({\r\n    inputRange: [0, 180],\r\n    outputRange: ['180deg', '360deg'],\r\n  });\r\n\r\n  const frontAnimatedStyle = {\r\n    transform: [{ rotateY: frontInterpolate }],\r\n  };\r\n  \r\n  const backAnimatedStyle = {\r\n    transform: [{ rotateY: backInterpolate }],\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentWordIndex < words.length - 1) {\r\n      setIsFlipped(false);\r\n      flipAnimation.setValue(0);\r\n      setCurrentWordIndex(currentWordIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentWordIndex > 0) {\r\n      setIsFlipped(false);\r\n      flipAnimation.setValue(0);\r\n      setCurrentWordIndex(currentWordIndex - 1);\r\n    }\r\n  };\r\n\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onMoveShouldSetPanResponder: (evt, gestureState) => {\r\n        return Math.abs(gestureState.dx) > 20;\r\n      },\r\n      onPanResponderMove: (evt, gestureState) => {\r\n        translateX.setValue(gestureState.dx);\r\n      },\r\n      onPanResponderRelease: (evt, gestureState) => {\r\n        if (gestureState.dx > 50) {\r\n          handlePrevious();\r\n        } else if (gestureState.dx < -50) {\r\n          handleNext();\r\n        } else {\r\n          Animated.spring(translateX, {\r\n            toValue: 0,\r\n            friction: 8,\r\n            tension: 10,\r\n            useNativeDriver: true,\r\n          }).start();\r\n        }\r\n      },\r\n    })\r\n  ).current;\r\n\r\n  return (\r\n    <SafeAreaBox>\r\n      <View style={styles.container}>\r\n        <TouchableOpacity onPress={flipCard} activeOpacity={1} {...panResponder.panHandlers}>\r\n          <Animated.View style={[styles.cardContainer, { transform: [{ translateX }] }]}>\r\n            <Animated.View style={[styles.flashcard, frontAnimatedStyle]}>\r\n              <Text style={styles.wordText}>{currentWord?.word}</Text>\r\n            </Animated.View>\r\n            \r\n            <Animated.View style={[styles.flashcard, styles.flashcardBack, backAnimatedStyle]}>\r\n              <Text style={styles.vietnameseText}>{currentWord?.vietnamese}</Text>\r\n            </Animated.View>\r\n          </Animated.View>\r\n        </TouchableOpacity>\r\n\r\n        <View style={styles.navigation}>\r\n          <TouchableOpacity \r\n            style={styles.navButton}\r\n            onPress={handlePrevious}\r\n            disabled={currentWordIndex === 0}\r\n          >\r\n            <Icon name=\"chevron-left\" size={24} color={currentWordIndex === 0 ? \"#ccc\" : \"#000\"} />\r\n          </TouchableOpacity>\r\n          <Text style={styles.pageIndicator}>{`${currentWordIndex + 1} / ${words.length}`}</Text>\r\n          <TouchableOpacity \r\n            style={styles.navButton}\r\n            onPress={handleNext}\r\n            disabled={currentWordIndex === words.length - 1}\r\n          >\r\n            <Icon name=\"chevron-right\" size={24} color={currentWordIndex === words.length - 1 ? \"#ccc\" : \"#000\"} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaBox>\r\n  );\r\n}\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst cardWidth = width * 0.85;\r\nconst cardHeight = height * 0.45;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    paddingTop: 10,\r\n  },\r\n  cardContainer: {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    marginVertical: 15,\r\n  },\r\n  flashcard: {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 20,\r\n    padding: 15,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backfaceVisibility: 'hidden',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n    position: 'absolute',\r\n    borderWidth: 1,\r\n    borderColor: '#E0E0E0',\r\n  },\r\n  flashcardBack: {\r\n    backgroundColor: '#F8F9FA',\r\n    borderRadius: 20,\r\n    padding: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  wordText: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginVertical: 20,\r\n    color: '#2C3E50',\r\n  },\r\n  pronunciationText: {\r\n    fontSize: 18,\r\n    color: '#7F8C8D',\r\n    marginVertical: 10,\r\n    fontStyle: 'italic',\r\n  },\r\n  partOfSpeechText: {\r\n    fontSize: 16,\r\n    color: '#95A5A6',\r\n    marginVertical: 10,\r\n    textTransform: 'lowercase',\r\n  },\r\n  vietnameseText: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginVertical: 20,\r\n    color: '#2C3E50',\r\n  },\r\n  exampleText: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  navigation: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n  },\r\n  navButton: {\r\n    padding: 10,\r\n  },\r\n  pageIndicator: {\r\n    marginHorizontal: 20,\r\n    fontSize: 16,\r\n  },\r\n  errorText: {\r\n    fontSize: 16,\r\n    color: '#ff0000',\r\n    marginTop: 20,\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
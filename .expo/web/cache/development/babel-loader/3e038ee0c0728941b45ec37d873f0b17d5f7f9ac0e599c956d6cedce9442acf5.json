{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SafeAreaBox } from \"../../../../components\";\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport { insertTopics, getDBConnection } from \"../../../../database/db-service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function MyLibraryScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    title = _React$useState2[0],\n    setTitle = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    description = _React$useState4[0],\n    setDescription = _React$useState4[1];\n  var _React$useState5 = React.useState([{\n      id: 1,\n      term: '',\n      definition: ''\n    }, {\n      id: 2,\n      term: '',\n      definition: ''\n    }]),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    vocabularyList = _React$useState6[0],\n    setVocabularyList = _React$useState6[1];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSaving = _useState2[0],\n    setIsSaving = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    db = _useState4[0],\n    setDb = _useState4[1];\n  useEffect(function () {\n    var initDB = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var database = yield getDBConnection();\n          console.log(\"Database connected successfully\");\n          setDb(database);\n        } catch (error) {\n          console.error(\"Database connection failed:\", error);\n          Alert.alert(\"Lỗi\", \"Không thể kết nối với cơ sở dữ liệu\");\n        }\n      });\n      return function initDB() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    initDB();\n  }, []);\n  var handleSave = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (!title.trim()) {\n        Alert.alert('Lỗi', 'Vui lòng nhập tiêu đề chủ đề');\n        return;\n      }\n      if (vocabularyList.some(function (item) {\n        return !item.term.trim() || !item.definition.trim();\n      })) {\n        Alert.alert('Lỗi', 'Vui lòng điền đầy đủ từ vựng và định nghĩa');\n        return;\n      }\n      if (!db) {\n        Alert.alert('Lỗi', 'Không thể kết nối với cơ sở dữ liệu');\n        return;\n      }\n      setIsSaving(true);\n      try {\n        var _route$params;\n        console.log(\"Starting save process...\");\n        var vocabData = {\n          topic: title,\n          vocabulary: vocabularyList\n        };\n        yield insertTopics(db, vocabData);\n        console.log(\"Topic saved successfully\");\n        var newTopic = {\n          TopicID: title.toLowerCase().replace(/\\s+/g, '-'),\n          TopicName: title,\n          wordCount: vocabularyList.length\n        };\n        if ((_route$params = route.params) != null && _route$params.onTopicAdded) {\n          route.params.onTopicAdded(newTopic);\n        }\n        Alert.alert('Thành công', 'Đã lưu chủ đề thành công', [{\n          text: 'OK',\n          onPress: function onPress() {\n            return navigation.goBack();\n          }\n        }]);\n      } catch (error) {\n        console.error(\"Save error:\", error);\n        Alert.alert('Lỗi', `Không thể lưu chủ đề: ${error.message}`);\n      } finally {\n        setIsSaving(false);\n      }\n    });\n    return function handleSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          onPress: handleSave,\n          disabled: isSaving,\n          style: {\n            marginRight: 15\n          },\n          children: _jsx(Text, {\n            style: {\n              color: '#fff'\n            },\n            children: isSaving ? 'Đang lưu...' : 'Lưu'\n          })\n        });\n      }\n    });\n  }, [navigation, handleSave, isSaving]);\n  var addVocabularyItem = function addVocabularyItem() {\n    var _scrollViewRef$curren;\n    var newItem = {\n      id: vocabularyList.length + 1,\n      term: '',\n      definition: ''\n    };\n    setVocabularyList([].concat(_toConsumableArray(vocabularyList), [newItem]));\n    setSwipeX(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, newItem.id, 0));\n    });\n    (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollToEnd({\n      animated: true\n    });\n  };\n  var deleteVocabularyItem = function deleteVocabularyItem(id) {\n    setVocabularyList(function (prevList) {\n      var newList = prevList.filter(function (item) {\n        return item.id !== id;\n      });\n      return newList;\n    });\n    setSwipeX(function (prevSwipeX) {\n      var newSwipeX = _objectSpread({}, prevSwipeX);\n      delete newSwipeX[id];\n      return newSwipeX;\n    });\n  };\n  var _onGestureEvent = function onGestureEvent(event, id) {\n    if (event.nativeEvent.state === State.ACTIVE) {\n      var translationX = event.nativeEvent.translationX;\n      if (translationX < 0 && Math.abs(translationX) <= itemWidth) {\n        setSwipeX(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, id, translationX));\n        });\n      }\n    } else if (event.nativeEvent.state === State.END) {\n      var _translationX = event.nativeEvent.translationX;\n      if (_translationX < -itemWidth * (1 / 3)) {\n        deleteVocabularyItem(id);\n      } else {\n        setSwipeX(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, id, 0));\n        });\n      }\n    }\n  };\n  return _jsx(SafeAreaBox, {\n    children: _jsxs(ScrollView, {\n      ref: scrollViewRef,\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        style: styles.titleInput,\n        placeholder: \"Nh\\u1EADp ti\\xEAu \\u0111\\u1EC1, v\\xED d\\u1EE5: 'Animal and plant'\",\n        value: title,\n        onChangeText: setTitle\n      }), _jsx(TextInput, {\n        style: styles.descriptionInput,\n        placeholder: \"Th\\xEAm m\\xF4 t\\u1EA3...\",\n        value: description,\n        onChangeText: setDescription,\n        multiline: true\n      }), vocabularyList.map(function (item) {\n        return _jsx(PanGestureHandler, {\n          onGestureEvent: function onGestureEvent(event) {\n            return _onGestureEvent(event, item.id);\n          },\n          children: _jsx(View, {\n            style: styles.vocabularyItem,\n            children: _jsxs(View, {\n              style: [styles.inputContainer, {\n                transform: [{\n                  translateX: swipeX[item.id] || 0\n                }]\n              }],\n              children: [_jsx(TextInput, {\n                style: styles.termInput,\n                placeholder: \"Nh\\u1EADp thu\\u1EADt ng\\u1EEF...\",\n                value: item.term,\n                onChangeText: function onChangeText(text) {\n                  setVocabularyList(function (prevList) {\n                    return prevList.map(function (vocabItem) {\n                      return vocabItem.id === item.id ? _objectSpread(_objectSpread({}, vocabItem), {}, {\n                        term: text\n                      }) : vocabItem;\n                    });\n                  });\n                }\n              }), _jsx(Text, {\n                style: styles.helperText,\n                children: \"Thu\\u1EADt ng\\u1EEF\"\n              }), _jsx(TextInput, {\n                style: styles.definitionInput,\n                placeholder: \"Nh\\u1EADp \\u0111\\u1ECBnh ngh\\u0129a...\",\n                value: item.definition,\n                onChangeText: function onChangeText(text) {\n                  setVocabularyList(function (prevList) {\n                    return prevList.map(function (vocabItem) {\n                      return vocabItem.id === item.id ? _objectSpread(_objectSpread({}, vocabItem), {}, {\n                        definition: text\n                      }) : vocabItem;\n                    });\n                  });\n                }\n              }), _jsx(Text, {\n                style: styles.helperText,\n                children: \"\\u0110\\u1ECBnh ngh\\u0129a\"\n              })]\n            })\n          })\n        }, item.id);\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: addVocabularyItem,\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: \"+\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.saveButton,\n        onPress: handleSaveAndNavigate,\n        disabled: isSaving,\n        children: _jsx(Text, {\n          style: styles.saveButtonText,\n          children: isSaving ? 'Đang lưu...' : 'Lưu chủ đề'\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f0f4ff'\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  titleInput: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16\n  },\n  descriptionInput: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    padding: 12,\n    height: 100,\n    marginBottom: 16\n  },\n  vocabularyItem: {\n    marginBottom: 16\n  },\n  inputContainer: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 8,\n    marginBottom: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    elevation: 5\n  },\n  termInput: {\n    borderBottomWidth: 2,\n    borderColor: '#000',\n    padding: 8,\n    marginBottom: 2\n  },\n  definitionInput: {\n    borderBottomWidth: 2,\n    borderColor: '#000',\n    padding: 8,\n    marginBottom: 4\n  },\n  helperText: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n    textAlign: 'left',\n    fontWeight: 'bold'\n  },\n  addButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#4A90E2',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginTop: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  addButtonText: {\n    color: 'white',\n    fontSize: 24\n  },\n  deleteButton: {\n    position: 'absolute',\n    right: 10,\n    top: 10,\n    backgroundColor: 'transparent'\n  },\n  deleteButtonText: {\n    fontSize: 24\n  },\n  saveButton: {\n    backgroundColor: '#4CAF50',\n    padding: 15,\n    borderRadius: 10,\n    marginVertical: 20,\n    alignSelf: 'stretch',\n    marginHorizontal: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  saveButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ScrollView","TouchableOpacity","TextInput","Alert","SafeAreaBox","PanGestureHandler","State","insertTopics","getDBConnection","jsx","_jsx","jsxs","_jsxs","MyLibraryScreen","_ref","navigation","route","_React$useState","_React$useState2","_slicedToArray","title","setTitle","_React$useState3","_React$useState4","description","setDescription","_React$useState5","id","term","definition","_React$useState6","vocabularyList","setVocabularyList","_useState","_useState2","isSaving","setIsSaving","_useState3","_useState4","db","setDb","initDB","_ref2","_asyncToGenerator","database","console","log","error","alert","apply","arguments","handleSave","_ref3","trim","some","item","_route$params","vocabData","topic","vocabulary","newTopic","TopicID","toLowerCase","replace","TopicName","wordCount","length","params","onTopicAdded","text","onPress","goBack","message","setOptions","headerRight","disabled","style","marginRight","children","color","addVocabularyItem","_scrollViewRef$curren","newItem","concat","_toConsumableArray","setSwipeX","prev","_objectSpread","_defineProperty","scrollViewRef","current","scrollToEnd","animated","deleteVocabularyItem","prevList","newList","filter","prevSwipeX","newSwipeX","onGestureEvent","event","nativeEvent","state","ACTIVE","translationX","Math","abs","itemWidth","END","ref","styles","container","titleInput","placeholder","value","onChangeText","descriptionInput","multiline","map","vocabularyItem","inputContainer","transform","translateX","swipeX","termInput","vocabItem","helperText","definitionInput","addButton","addButtonText","saveButton","handleSaveAndNavigate","saveButtonText","create","flex","padding","backgroundColor","header","fontSize","fontWeight","marginBottom","textAlign","borderWidth","borderColor","borderRadius","height","shadowColor","shadowOffset","width","shadowOpacity","elevation","borderBottomWidth","marginTop","justifyContent","alignItems","alignSelf","shadowRadius","deleteButton","position","right","top","deleteButtonText","marginVertical","marginHorizontal"],"sources":["D:/Loc2023-2024/Mobile App/TOEIC-practice-app/src/screens/Vocabulary/VocabularySubscreen/MyLibraryScreen/MyLibraryScreen.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, TextInput, Alert } from 'react-native';\r\nimport { SafeAreaBox } from \"../../../../components\";\r\nimport { useRoute, useNavigation } from '@react-navigation/native';\r\nimport { HomeStackParamList, MyLibraryScreenProps, Topic } from '../../../types';\r\nimport { RouteProp } from '@react-navigation/native';\r\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\r\nimport { insertTopics, getDBConnection } from '../../../../database/db-service';\r\nimport * as SQLite from 'expo-sqlite';\r\n\r\ntype MyLibraryScreenRouteProp = RouteProp<HomeStackParamList, 'MyLibraryScreen'>;\r\n\r\nexport function MyLibraryScreen({ navigation, route }: MyLibraryScreenProps) {\r\n  const [title, setTitle] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n  const [vocabularyList, setVocabularyList] = React.useState<{ id: number; term: string; definition: string }[]>([\r\n    { id: 1, term: '', definition: '' },\r\n    { id: 2, term: '', definition: '' },\r\n  ]);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [db, setDb] = useState<SQLite.SQLiteDatabase | null>(null);\r\n\r\n  // Khởi tạo database\r\n  useEffect(() => {\r\n    const initDB = async () => {\r\n      try {\r\n        const database = await getDBConnection();\r\n        console.log(\"Database connected successfully\");\r\n        setDb(database);\r\n      } catch (error) {\r\n        console.error(\"Database connection failed:\", error);\r\n        Alert.alert(\"Lỗi\", \"Không thể kết nối với cơ sở dữ liệu\");\r\n      }\r\n    };\r\n    initDB();\r\n  }, []);\r\n\r\n  const handleSave = async () => {\r\n    if (!title.trim()) {\r\n      Alert.alert('Lỗi', 'Vui lòng nhập tiêu đề chủ đề');\r\n      return;\r\n    }\r\n\r\n    if (vocabularyList.some(item => !item.term.trim() || !item.definition.trim())) {\r\n      Alert.alert('Lỗi', 'Vui lòng điền đầy đủ từ vựng và định nghĩa');\r\n      return;\r\n    }\r\n\r\n    if (!db) {\r\n      Alert.alert('Lỗi', 'Không thể kết nối với cơ sở dữ liệu');\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    \r\n    try {\r\n      console.log(\"Starting save process...\");\r\n      const vocabData = {\r\n        topic: title,\r\n        vocabulary: vocabularyList\r\n      };\r\n\r\n      await insertTopics(db, vocabData);\r\n      console.log(\"Topic saved successfully\");\r\n\r\n      const newTopic: Topic = {\r\n        TopicID: title.toLowerCase().replace(/\\s+/g, '-'),\r\n        TopicName: title,\r\n        wordCount: vocabularyList.length\r\n      };\r\n\r\n      if (route.params?.onTopicAdded) {\r\n        route.params.onTopicAdded(newTopic);\r\n      }\r\n\r\n      Alert.alert(\r\n        'Thành công',\r\n        'Đã lưu chủ đề thành công',\r\n        [\r\n          {\r\n            text: 'OK',\r\n            onPress: () => navigation.goBack()\r\n          }\r\n        ]\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Save error:\", error);\r\n      Alert.alert('Lỗi', `Không thể lưu chủ đề: ${error.message}`);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  // Thêm useEffect để set up navigation params\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: () => (\r\n        <TouchableOpacity\r\n          onPress={handleSave}\r\n          disabled={isSaving}\r\n          style={{ marginRight: 15 }}\r\n        >\r\n          <Text style={{ color: '#fff' }}>\r\n            {isSaving ? 'Đang lưu...' : 'Lưu'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      )\r\n    });\r\n  }, [navigation, handleSave, isSaving]);\r\n\r\n  // ... rest of your component code ...\r\n\r\n  const addVocabularyItem = () => {\r\n    const newItem = { id: vocabularyList.length + 1, term: '', definition: '' };\r\n    setVocabularyList([...vocabularyList, newItem]);\r\n    setSwipeX(prev => ({ ...prev, [newItem.id]: 0 }));\r\n    scrollViewRef.current?.scrollToEnd({ animated: true });\r\n  };\r\n\r\n  const deleteVocabularyItem = (id: number) => {\r\n    setVocabularyList(prevList => {\r\n      const newList = prevList.filter(item => item.id !== id);\r\n      return newList;\r\n    });\r\n    setSwipeX(prevSwipeX => {\r\n      const newSwipeX = { ...prevSwipeX };\r\n      delete newSwipeX[id]; // Xóa trạng thái swipeX của khung đã xóa\r\n      return newSwipeX;\r\n    });\r\n  };\r\n\r\n  const onGestureEvent = (event: any, id: number) => {\r\n    if (event.nativeEvent.state === State.ACTIVE) {\r\n      const translationX = event.nativeEvent.translationX;\r\n      if (translationX < 0 && Math.abs(translationX) <= itemWidth) {\r\n        setSwipeX(prev => ({ ...prev, [id]: translationX }));\r\n      }\r\n    } else if (event.nativeEvent.state === State.END) {\r\n      const translationX = event.nativeEvent.translationX;\r\n      if (translationX < -itemWidth * (1 / 3)) {\r\n        deleteVocabularyItem(id);\r\n      } else {\r\n        setSwipeX(prev => ({ ...prev, [id]: 0 })); // Đặt lại trạng thái cho khung hiện tại\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaBox>\r\n      <ScrollView ref={scrollViewRef} style={styles.container}>\r\n        <TextInput\r\n          style={styles.titleInput}\r\n          placeholder=\"Nhập tiêu đề, ví dụ: 'Animal and plant'\"\r\n          value={title}\r\n          onChangeText={setTitle}\r\n        />\r\n        \r\n        <TextInput\r\n          style={styles.descriptionInput}\r\n          placeholder=\"Thêm mô tả...\"\r\n          value={description}\r\n          onChangeText={setDescription}\r\n          multiline\r\n        />\r\n\r\n        {/* Your existing vocabulary list items */}\r\n        {vocabularyList.map((item) => (\r\n          <PanGestureHandler onGestureEvent={(event) => onGestureEvent(event, item.id)} key={item.id}>\r\n            <View style={styles.vocabularyItem}>\r\n              <View style={[styles.inputContainer, { transform: [{ translateX: swipeX[item.id] || 0 }] }]}>\r\n                <TextInput\r\n                  style={styles.termInput}\r\n                  placeholder=\"Nhập thuật ngữ...\"\r\n                  value={item.term}\r\n                  onChangeText={(text) => {\r\n                    setVocabularyList(prevList => \r\n                      prevList.map(vocabItem => \r\n                        vocabItem.id === item.id ? { ...vocabItem, term: text } : vocabItem\r\n                      )\r\n                    );\r\n                  }}\r\n                />\r\n                <Text style={styles.helperText}>Thuật ngữ</Text>\r\n                <TextInput\r\n                  style={styles.definitionInput}\r\n                  placeholder=\"Nhập định nghĩa...\"\r\n                  value={item.definition}\r\n                  onChangeText={(text) => {\r\n                    setVocabularyList(prevList => \r\n                      prevList.map(vocabItem => \r\n                        vocabItem.id === item.id ? { ...vocabItem, definition: text } : vocabItem\r\n                      )\r\n                    );\r\n                  }}\r\n                />\r\n                <Text style={styles.helperText}>Định nghĩa</Text>\r\n              </View>\r\n            </View>\r\n          </PanGestureHandler>\r\n        ))}\r\n\r\n        <TouchableOpacity style={styles.addButton} onPress={addVocabularyItem}>\r\n          <Text style={styles.addButtonText}>+</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* Save Button */}\r\n        <TouchableOpacity \r\n          style={styles.saveButton} \r\n          onPress={handleSaveAndNavigate}\r\n          disabled={isSaving}\r\n        >\r\n          <Text style={styles.saveButtonText}>\r\n            {isSaving ? 'Đang lưu...' : 'Lưu chủ đề'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n    </SafeAreaBox>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#f0f4ff',\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n    textAlign: 'center',\r\n  },\r\n  titleInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginBottom: 16,\r\n  },\r\n  descriptionInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    height: 100,\r\n    marginBottom: 16,\r\n  },\r\n  vocabularyItem: {\r\n    marginBottom: 16,\r\n  },\r\n  inputContainer: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    padding: 8,\r\n    marginBottom: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    elevation: 5,\r\n  },\r\n  termInput: {\r\n    borderBottomWidth: 2,\r\n    borderColor: '#000',\r\n    padding: 8,\r\n    marginBottom: 2,\r\n  },\r\n  definitionInput: {\r\n    borderBottomWidth: 2,\r\n    borderColor: '#000',\r\n    padding: 8,\r\n    marginBottom: 4,\r\n  },\r\n  helperText: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginTop: 4,\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  addButton: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    backgroundColor: '#4A90E2',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    marginTop: 16,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  addButtonText: {\r\n    color: 'white',\r\n    fontSize: 24,\r\n  },\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    right: 10,\r\n    top: 10,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  deleteButtonText: {\r\n    fontSize: 24,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#4CAF50',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginVertical: 20,\r\n    alignSelf: 'stretch',\r\n    marginHorizontal: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  saveButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}